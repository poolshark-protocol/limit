// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class FactoryChanged extends ethereum.Event {
  get params(): FactoryChanged__Params {
    return new FactoryChanged__Params(this);
  }
}

export class FactoryChanged__Params {
  _event: FactoryChanged;

  constructor(event: FactoryChanged) {
    this._event = event;
  }

  get previousFactory(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newFactory(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class FeeTierEnabled extends ethereum.Event {
  get params(): FeeTierEnabled__Params {
    return new FeeTierEnabled__Params(this);
  }
}

export class FeeTierEnabled__Params {
  _event: FeeTierEnabled;

  constructor(event: FeeTierEnabled) {
    this._event = event;
  }

  get swapFee(): i32 {
    return this._event.parameters[0].value.toI32();
  }

  get tickSpacing(): i32 {
    return this._event.parameters[1].value.toI32();
  }
}

export class FeeToTransfer extends ethereum.Event {
  get params(): FeeToTransfer__Params {
    return new FeeToTransfer__Params(this);
  }
}

export class FeeToTransfer__Params {
  _event: FeeToTransfer;

  constructor(event: FeeToTransfer) {
    this._event = event;
  }

  get previousFeeTo(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newFeeTo(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class OwnerTransfer extends ethereum.Event {
  get params(): OwnerTransfer__Params {
    return new OwnerTransfer__Params(this);
  }
}

export class OwnerTransfer__Params {
  _event: OwnerTransfer;

  constructor(event: OwnerTransfer) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class PoolTypeEnabled extends ethereum.Event {
  get params(): PoolTypeEnabled__Params {
    return new PoolTypeEnabled__Params(this);
  }
}

export class PoolTypeEnabled__Params {
  _event: PoolTypeEnabled;

  constructor(event: PoolTypeEnabled) {
    this._event = event;
  }

  get poolTypeName(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get poolImpl(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenImpl(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get poolTypeId(): i32 {
    return this._event.parameters[3].value.toI32();
  }
}

export class ProtocolFeesCollected extends ethereum.Event {
  get params(): ProtocolFeesCollected__Params {
    return new ProtocolFeesCollected__Params(this);
  }
}

export class ProtocolFeesCollected__Params {
  _event: ProtocolFeesCollected;

  constructor(event: ProtocolFeesCollected) {
    this._event = event;
  }

  get pools(): Array<Address> {
    return this._event.parameters[0].value.toAddressArray();
  }

  get token0FeesCollected(): Array<BigInt> {
    return this._event.parameters[1].value.toBigIntArray();
  }

  get token1FeesCollected(): Array<BigInt> {
    return this._event.parameters[2].value.toBigIntArray();
  }
}

export class ProtocolFillFeesModified extends ethereum.Event {
  get params(): ProtocolFillFeesModified__Params {
    return new ProtocolFillFeesModified__Params(this);
  }
}

export class ProtocolFillFeesModified__Params {
  _event: ProtocolFillFeesModified;

  constructor(event: ProtocolFillFeesModified) {
    this._event = event;
  }

  get pools(): Array<Address> {
    return this._event.parameters[0].value.toAddressArray();
  }

  get protocolFillFees0(): Array<i32> {
    return this._event.parameters[1].value.toI32Array();
  }

  get protocolFillFees1(): Array<i32> {
    return this._event.parameters[2].value.toI32Array();
  }
}

export class ProtocolSwapFeesModified extends ethereum.Event {
  get params(): ProtocolSwapFeesModified__Params {
    return new ProtocolSwapFeesModified__Params(this);
  }
}

export class ProtocolSwapFeesModified__Params {
  _event: ProtocolSwapFeesModified;

  constructor(event: ProtocolSwapFeesModified) {
    this._event = event;
  }

  get pools(): Array<Address> {
    return this._event.parameters[0].value.toAddressArray();
  }

  get protocolSwapFees0(): Array<i32> {
    return this._event.parameters[1].value.toI32Array();
  }

  get protocolSwapFees1(): Array<i32> {
    return this._event.parameters[2].value.toI32Array();
  }
}

export class LimitPoolManager extends ethereum.SmartContract {
  static bind(address: Address): LimitPoolManager {
    return new LimitPoolManager("LimitPoolManager", address);
  }
}
