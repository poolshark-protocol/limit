// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class LimitPoolCreated extends ethereum.Event {
  get params(): LimitPoolCreated__Params {
    return new LimitPoolCreated__Params(this);
  }
}

export class LimitPoolCreated__Params {
  _event: LimitPoolCreated;

  constructor(event: LimitPoolCreated) {
    this._event = event;
  }

  get pool(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get token(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get token0(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get token1(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get swapFee(): i32 {
    return this._event.parameters[4].value.toI32();
  }

  get tickSpacing(): i32 {
    return this._event.parameters[5].value.toI32();
  }

  get poolTypeId(): i32 {
    return this._event.parameters[6].value.toI32();
  }
}

export class PoolCreated extends ethereum.Event {
  get params(): PoolCreated__Params {
    return new PoolCreated__Params(this);
  }
}

export class PoolCreated__Params {
  _event: PoolCreated;

  constructor(event: PoolCreated) {
    this._event = event;
  }

  get token0(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get token1(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get fee(): i32 {
    return this._event.parameters[2].value.toI32();
  }

  get tickSpacing(): i32 {
    return this._event.parameters[3].value.toI32();
  }

  get pool(): Address {
    return this._event.parameters[4].value.toAddress();
  }
}

export class LimitPoolFactory extends ethereum.SmartContract {
  static bind(address: Address): LimitPoolFactory {
    return new LimitPoolFactory("LimitPoolFactory", address);
  }
}
