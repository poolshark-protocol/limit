// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Burn extends ethereum.Event {
  get params(): Burn__Params {
    return new Burn__Params(this);
  }
}

export class Burn__Params {
  _event: Burn;

  constructor(event: Burn) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get tickLower(): i32 {
    return this._event.parameters[1].value.toI32();
  }

  get tickUpper(): i32 {
    return this._event.parameters[2].value.toI32();
  }

  get amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get amount0(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get amount1(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class BurnLimit extends ethereum.Event {
  get params(): BurnLimit__Params {
    return new BurnLimit__Params(this);
  }
}

export class BurnLimit__Params {
  _event: BurnLimit;

  constructor(event: BurnLimit) {
    this._event = event;
  }

  get to(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get positionId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get lower(): i32 {
    return this._event.parameters[2].value.toI32();
  }

  get upper(): i32 {
    return this._event.parameters[3].value.toI32();
  }

  get oldClaim(): i32 {
    return this._event.parameters[4].value.toI32();
  }

  get newClaim(): i32 {
    return this._event.parameters[5].value.toI32();
  }

  get zeroForOne(): boolean {
    return this._event.parameters[6].value.toBoolean();
  }

  get liquidityBurned(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get tokenInClaimed(): BigInt {
    return this._event.parameters[8].value.toBigInt();
  }

  get tokenOutBurned(): BigInt {
    return this._event.parameters[9].value.toBigInt();
  }
}

export class BurnRange extends ethereum.Event {
  get params(): BurnRange__Params {
    return new BurnRange__Params(this);
  }
}

export class BurnRange__Params {
  _event: BurnRange;

  constructor(event: BurnRange) {
    this._event = event;
  }

  get recipient(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get positionId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get liquidityBurned(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get amount0(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get amount1(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class Collect extends ethereum.Event {
  get params(): Collect__Params {
    return new Collect__Params(this);
  }
}

export class Collect__Params {
  _event: Collect;

  constructor(event: Collect) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get recipient(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tickLower(): i32 {
    return this._event.parameters[2].value.toI32();
  }

  get tickUpper(): i32 {
    return this._event.parameters[3].value.toI32();
  }

  get amount0(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get amount1(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class CompoundRange extends ethereum.Event {
  get params(): CompoundRange__Params {
    return new CompoundRange__Params(this);
  }
}

export class CompoundRange__Params {
  _event: CompoundRange;

  constructor(event: CompoundRange) {
    this._event = event;
  }

  get positionId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get liquidityCompounded(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Initialize extends ethereum.Event {
  get params(): Initialize__Params {
    return new Initialize__Params(this);
  }
}

export class Initialize__Params {
  _event: Initialize;

  constructor(event: Initialize) {
    this._event = event;
  }

  get price(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get tick(): i32 {
    return this._event.parameters[1].value.toI32();
  }
}

export class InitializeLimit extends ethereum.Event {
  get params(): InitializeLimit__Params {
    return new InitializeLimit__Params(this);
  }
}

export class InitializeLimit__Params {
  _event: InitializeLimit;

  constructor(event: InitializeLimit) {
    this._event = event;
  }

  get minTick(): i32 {
    return this._event.parameters[0].value.toI32();
  }

  get maxTick(): i32 {
    return this._event.parameters[1].value.toI32();
  }

  get startPrice(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get startTick(): i32 {
    return this._event.parameters[3].value.toI32();
  }
}

export class Mint extends ethereum.Event {
  get params(): Mint__Params {
    return new Mint__Params(this);
  }
}

export class Mint__Params {
  _event: Mint;

  constructor(event: Mint) {
    this._event = event;
  }

  get sender(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tickLower(): i32 {
    return this._event.parameters[2].value.toI32();
  }

  get tickUpper(): i32 {
    return this._event.parameters[3].value.toI32();
  }

  get amount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get amount0(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get amount1(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }
}

export class MintLimit extends ethereum.Event {
  get params(): MintLimit__Params {
    return new MintLimit__Params(this);
  }
}

export class MintLimit__Params {
  _event: MintLimit;

  constructor(event: MintLimit) {
    this._event = event;
  }

  get to(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get lower(): i32 {
    return this._event.parameters[1].value.toI32();
  }

  get upper(): i32 {
    return this._event.parameters[2].value.toI32();
  }

  get zeroForOne(): boolean {
    return this._event.parameters[3].value.toBoolean();
  }

  get positionId(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get epochLast(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get amountIn(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get liquidityMinted(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }
}

export class MintRange extends ethereum.Event {
  get params(): MintRange__Params {
    return new MintRange__Params(this);
  }
}

export class MintRange__Params {
  _event: MintRange;

  constructor(event: MintRange) {
    this._event = event;
  }

  get recipient(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get lower(): i32 {
    return this._event.parameters[1].value.toI32();
  }

  get upper(): i32 {
    return this._event.parameters[2].value.toI32();
  }

  get positionId(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get liquidityMinted(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get amount0Delta(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get amount1Delta(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }
}

export class SampleCountIncreased extends ethereum.Event {
  get params(): SampleCountIncreased__Params {
    return new SampleCountIncreased__Params(this);
  }
}

export class SampleCountIncreased__Params {
  _event: SampleCountIncreased;

  constructor(event: SampleCountIncreased) {
    this._event = event;
  }

  get newSampleCountMax(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class SampleRecorded extends ethereum.Event {
  get params(): SampleRecorded__Params {
    return new SampleRecorded__Params(this);
  }
}

export class SampleRecorded__Params {
  _event: SampleRecorded;

  constructor(event: SampleRecorded) {
    this._event = event;
  }

  get tickSecondsAccum(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get secondsPerLiquidityAccum(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Swap extends ethereum.Event {
  get params(): Swap__Params {
    return new Swap__Params(this);
  }
}

export class Swap__Params {
  _event: Swap;

  constructor(event: Swap) {
    this._event = event;
  }

  get sender(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get recipient(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount0(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get amount1(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get price(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get liquidity(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get tickAtPrice(): i32 {
    return this._event.parameters[6].value.toI32();
  }
}

export class SwapLimit extends ethereum.Event {
  get params(): SwapLimit__Params {
    return new SwapLimit__Params(this);
  }
}

export class SwapLimit__Params {
  _event: SwapLimit;

  constructor(event: SwapLimit) {
    this._event = event;
  }

  get recipient(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amountIn(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get amountOut(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get feeGrowthGlobal0(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get feeGrowthGlobal1(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get price(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get liquidity(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get feeAmount(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get tickAtPrice(): i32 {
    return this._event.parameters[8].value.toI32();
  }

  get zeroForOne(): boolean {
    return this._event.parameters[9].value.toBoolean();
  }

  get exactIn(): boolean {
    return this._event.parameters[10].value.toBoolean();
  }
}

export class SyncLimitLiquidity extends ethereum.Event {
  get params(): SyncLimitLiquidity__Params {
    return new SyncLimitLiquidity__Params(this);
  }
}

export class SyncLimitLiquidity__Params {
  _event: SyncLimitLiquidity;

  constructor(event: SyncLimitLiquidity) {
    this._event = event;
  }

  get liquidityAdded(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get tick(): i32 {
    return this._event.parameters[1].value.toI32();
  }

  get zeroForOne(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }
}

export class SyncLimitPool extends ethereum.Event {
  get params(): SyncLimitPool__Params {
    return new SyncLimitPool__Params(this);
  }
}

export class SyncLimitPool__Params {
  _event: SyncLimitPool;

  constructor(event: SyncLimitPool) {
    this._event = event;
  }

  get price(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get liquidity(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get epoch(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get tickAtPrice(): i32 {
    return this._event.parameters[3].value.toI32();
  }

  get isPool0(): boolean {
    return this._event.parameters[4].value.toBoolean();
  }
}

export class SyncLimitTick extends ethereum.Event {
  get params(): SyncLimitTick__Params {
    return new SyncLimitTick__Params(this);
  }
}

export class SyncLimitTick__Params {
  _event: SyncLimitTick;

  constructor(event: SyncLimitTick) {
    this._event = event;
  }

  get epoch(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get tick(): i32 {
    return this._event.parameters[1].value.toI32();
  }

  get zeroForOne(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }
}

export class SyncRangeTick extends ethereum.Event {
  get params(): SyncRangeTick__Params {
    return new SyncRangeTick__Params(this);
  }
}

export class SyncRangeTick__Params {
  _event: SyncRangeTick;

  constructor(event: SyncRangeTick) {
    this._event = event;
  }

  get feeGrowthOutside0(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get feeGrowthOutside1(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get tick(): i32 {
    return this._event.parameters[2].value.toI32();
  }
}

export class LimitPool extends ethereum.SmartContract {
  static bind(address: Address): LimitPool {
    return new LimitPool("LimitPool", address);
  }
}
